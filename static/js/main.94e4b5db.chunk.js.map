{"version":3,"sources":["components/Filter/filter.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/contactForm.module.css","components/ContactList/contactList.module.css"],"names":["module","exports","ContactForm","onAddContact","useState","name","setName","number","setNumber","nameInputId","shortid","generate","numberInputId","handleChange","e","target","value","reset","className","styles","contactForm","onSubmit","preventDefault","htmlFor","type","pattern","title","required","onChange","id","contactName","contactNumber","btn","proppTypes","PropTypes","func","ContactList","contacts","onDeleteContact","contactList","map","contactList__item","onClick","Filter","filter","label","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacs","setFilter","find","contact","toLowerCase","alert","prevState","includes","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94e4b5db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"filter_filter__1lyZI\",\"label\":\"filter_label__z_rdC\"};","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport shortid from \"shortid\";\nimport styles from \"./contactForm.module.css\";\n\nexport default function ContactForm({ onAddContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = shortid.generate();\n  const numberInputId = shortid.generate();\n  \n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onAddContact(name,number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  \n  return (\n    <form className={styles.contactForm} onSubmit={handleSubmit}>\n      <label htmlFor={nameInputId}>Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n          id={nameInputId}\n          className={styles.contactName}\n        />\n      </label>\n      <label htmlFor={numberInputId}>Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n          id={numberInputId}\n          className={styles.contactNumber}\n        />\n      </label>\n      <button type=\"submit\" className={styles.btn}>Add contact</button>\n    </form>\n  );\n}\n\nContactForm.proppTypes = {\n  onAddContact: PropTypes.func,\n}\n","import PropTypes from \"prop-types\";\nimport styles from \"./contactList.module.css\";\n\nexport default function ContactList({ contacts, onDeleteContact }) {\n  \n  return (\n    <ul className={styles.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={styles.contactList__item}>\n          {name}: {number}\n          <button\n            type=\"submit\"\n            onClick={() => onDeleteContact(id)}\n            className={styles.btn}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onDeleteContact: PropTypes.func,\n};\n","import PropTypes from \"prop-types\";\nimport styles from \"./filter.module.css\";\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <label className={styles.filter}>\n      <span className={styles.label}>Find contacts by name</span>\n      <input type=\"text\" value={value} onChange={e => onChange(e.target.value)}></input>\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport shortid from \"shortid\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n\nconst useLocalStorage = (key, defaultValue) => {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  })\n  \n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state])\n\n  return [state, setState];\n};\n\n\nexport default function App() {\n  const [contacts, setContacs] = useLocalStorage('contacts',\n    [{ id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },]);\n  const [filter, setFilter] = useState('');\n  \n  const addContact = (name, number) => {\n    if (contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    const contact = {\n        name,\n        number,\n      id: shortid.generate(),\n    };\n    \n    setContacs((prevState) => [...prevState, contact]);\n  };\n  \n  const changeFilter = (filter) => {\n    setFilter(filter);\n  };\n  \n  const getVisibleFilter = () => {\n     return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  const deleteContact = (contactId) => {\n    setContacs(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  // useEffect(() => {\n  //   window.localStorage.setItem('contacts', JSON.stringify(contacts))\n  // }, [contacts]);\n  \n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm onAddContact={addContact} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList contacts={getVisibleFilter()} onDeleteContact={deleteContact} />\n    </div>\n  );\n  \n}\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"contactForm_contactForm__36qOq\",\"contactName\":\"contactForm_contactName__1BdCZ\",\"contactNumber\":\"contactForm_contactNumber__oKtS7\",\"btn\":\"contactForm_btn__1Qa7g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"contactList_btn__1zzDI\",\"contactList\":\"contactList_contactList__2VOlv\",\"contactList__item\":\"contactList_contactList__item__3DeP5\"};"],"sourceRoot":""}